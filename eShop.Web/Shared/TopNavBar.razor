@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<IdentityUser> UserManager;
@inject NavigationManager NavigationManager;

<div class="navbar navbar-expand-lg navbar-dark bg-dark">
    <ul class="navbar-nav w-100">
        <li class="nav-item">
            <a class="navbar-brand" href="">eShop</a>
        </li>
        <AuthorizeView Policy="AdminOnly">
            <Authorized>
                <li class="nav-item">
                    <a class="nav-link" href="outstandingorders">Невыполненные заказы</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="processedorders">Обработанные заказы</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="transactions">Отчет о заказах</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="addproduct">Добавить продукт</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="categories">Управление категориями</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="authors">Управление авторами</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="brands">Управление издательствами</a>
                </li>
            </Authorized>
        </AuthorizeView>
        <li class="nav-item ml-auto">
            <AuthorizeView Policy="UserOnly">
                <Authorized>
                    <button type="button" @onclick="@(() => GetOrdersByUser())" class="btn btn-link">Заказы</button>
                </Authorized>
            </AuthorizeView>
            <LoginDisplayComponent></LoginDisplayComponent>
            <NavLink class="nav-link" href="cart">
                <CartComponent></CartComponent>
            </NavLink>
        </li>
    </ul>
</div>

@code {

    private async Task GetOrdersByUser()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var currentUser = await UserManager.GetUserAsync(user);
            NavigationManager.NavigateTo($"/orders/{currentUser.Id}");
        }
    }
}
