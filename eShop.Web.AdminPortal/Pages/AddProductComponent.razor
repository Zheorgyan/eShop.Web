@page "/addproduct"
@attribute [Authorize]

@inject IAddProductUseCase AddProductUseCase
@inject NavigationManager NavigationManager

<h3>Добавить продукт</h3>
<br />
@if (product != null)
{
<EditForm Model="product" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Наименование</label>
        <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="img">Ссылка изображения обложки</label>
        <InputText id="img" @bind-Value="product.ImageLink" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="brand">Издательство</label>
        <InputText id="brand" @bind-Value="product.Brand" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="price">Цена</label>
        <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
    </div>

    <div class="form-group">
        <label for="author">Автор</label>
        <InputText id="author" @bind-Value="product.Author" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="descr">Описание</label>
        <InputText id="descr" @bind-Value="product.Description" class="form-control"></InputText>
    </div>

    <button type="submit" class="btn btn-primary">Сохранить</button>
    <button type="button" class="btn btn-primary" @onclick="OnCancel">Отменить</button>
</EditForm>

}


@code {

    private Product product;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        product = new Product();
    }

    private void OnValidSubmit()
    {
        AddProductUseCase.Execute(product);
        NavigationManager.NavigateTo("/products");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}
