@page "/editproduct/{productId}"

@attribute [Authorize(Policy ="AdminOnly")]

@inject IEditProductUseCase EditProductUseCase
@inject NavigationManager NavigationManager
@inject IViewProductUseCase ViewProductUsecase
@inject IViewCategoriesUseCase ViewCategoriesUseCase
@inject IViewBrandsUseCase ViewBrandsUseCase
@inject IViewAuthorsUseCase ViewAuthorsUseCase

<h3>Изменить продукт</h3>
<br />

@if(product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="category">Категория</label>
            <select id="category" @bind="product.CategoryId" class="form-control">
                <option selected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="brand">Издательство</label>
            <select id="brand" @bind="product.BrandId" class="form-control">
                <option selected></option>
                @foreach (var brand in brands)
                {
                    <option value="@brand.BrandId">@brand.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="name">Наименование</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="img">Ссылка изображения обложки</label>
            <InputText id="img" @bind-Value="product.ImageLink" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="price">Цена</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="author">Автор</label>
            <select id="author" @bind="product.AuthorId" class="form-control">
                <option selected></option>
                @foreach (var author in authors)
                {
                    <option value="@author.AuthorId">@author.FirstName @author.LastName</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="descr">Описание</label>
            <InputText id="descr" @bind-Value="product.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Отменить</button>
    </EditForm>
}

@code {
    [Parameter]
    public string ProductId { get; set; }

    private Product product;
    private AuthorForProduct authorForProduct;
    private IEnumerable<Category> categories;
    private IEnumerable<Brand> brands;
    private IEnumerable<Author> authors;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = ViewCategoriesUseCase.Execute();
        brands = ViewBrandsUseCase.Execute();
        authors = ViewAuthorsUseCase.Execute();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if(int.TryParse(this.ProductId, out int productId))
        {
            var prod = ViewProductUsecase.Execute(productId);
            product = new Product(prod);
        }

    }

    private void OnValidSubmit()
    {
        EditProductUseCase.Execute(product);
        NavigationManager.NavigateTo($"/product/{product.ProductId}");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo($"/product/{product.ProductId}");
    }
}
