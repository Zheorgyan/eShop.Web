@inject IViewAuthorsUseCase ViewAuthorsUseCase
@inject IViewBrandsUseCase ViewBrandsUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase

<div class="form-inline">
    <div class="input-group" style="width: 100%">
        <input type="text" class="form-control" @bind-value="filter" @onkeyup="HandleKeyUp" placeholder="Поиск книги, авторов, издательств, категорий"
               aria-label="Поиск книги, авторов, издательств, категорий" aria-describedby="button-addon2">
        <div class="input-group-append">
            <button class="btn btn-outline-primary" type="button" @onclick="HandleSearch">Поиск</button>
        </div>
    </div>
</div>



@code {

    private string filter;
    private IEnumerable<Category> categories;
    private IEnumerable<Author> authors;
    private IEnumerable<Brand> brands;

    [Parameter]
    public EventCallback<string> OnSearch { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        categories = ViewCategoriesUseCase.Execute();
        authors = ViewAuthorsUseCase.Execute();
        brands = ViewBrandsUseCase.Execute();
    }
    private void FilterProducts(ChangeEventArgs e)
    {
        OnSearch.InvokeAsync(e.Value.ToString());
    }
    private void HandleSearch()
    {
        OnSearch.InvokeAsync(filter);
    }

    private void FilterProducts(string filter)
    {
        OnSearch.InvokeAsync(filter);
    }

    private void HandleKeyUp(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            if (filter != string.Empty)
            {
                OnSearch.InvokeAsync(filter);
            }
        }
    }
}
