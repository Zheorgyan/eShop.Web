@page "/product/{id:int}"

@inject NavigationManager NavigationManager
@inject IViewProductUseCase ViewProductUseCase
@inject IAddProductToCartUseCase  addProductToCartUseCase
@inject eShop.UseCases.DeleteProductUseCase.IDeleteProductUseCase DeleteProductUseCase
@inject IGetCategoryByIdUseCase GetCategoryById
@inject IGetBrandByIdUseCase GetBrandById
@inject IGetAuthorByIdUseCase GetAuthorById

<div class="card mb-3">
  <div class="row no-gutters">
    <div class="col-md-4">
      <img class="img-fluid" src="@product.ImageLink"/>
    </div>
    <div class="col-md-8">
      <div class="card-body">
        <h5 class="card-title">@product.Name</h5>
        <p class="card-text">Цена: <label style="color:darkred">@product.Price.ToString("c")</label></p>
        <button type="button" class="button btn-success btn-lg btn-block" @onclick="AddToCart">Добавить в корзину</button>
        <br/>
        <p class="card-text">@product.Description</p>
        <p class="card-text"><small class="text-muted">@author.FirstName @author.LastName</small></p>
        <p class="card-text"><small class="text-muted">@brand.Name</small></p>
        <p class="card-text"><small class="text-muted">@category.Name</small></p>

        <AuthorizeView Policy="AdminOnly">
            <Authorized>
                <button type="button" class="button btn-warning btn-lg btn-block" @onclick="EditProduct">Редактировать</button>
                <br/>
                <button type="button" class="button btn-danger btn-lg btn-block" @onclick="DeleteProduct">Удалить</button>
            </Authorized>
        </AuthorizeView>
      </div>
    </div>
  </div>
</div>

<br/>
<NavLink href="products">Вернуться</NavLink>

@code {
    private Product product;
    private Category category;
    private Brand brand;
    private Author author;

    [Parameter]
    public int Id { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (Id > 0) product = ViewProductUseCase.Execute(Id);
        category = GetCategoryById.Execute(product.CategoryId);
        brand = GetBrandById.Execute(product.BrandId);
        author = GetAuthorById.Execute(product.AuthorId);
    }

    private void AddToCart()
    {
        addProductToCartUseCase.Execute(product.ProductId);
        NavigationManager.NavigateTo("/");
    }

    private void EditProduct()
    {
        NavigationManager.NavigateTo($"/editproduct/{product.ProductId}");
    }

    private void DeleteProduct()
    {
        DeleteProductUseCase.Execute(product.ProductId);
        NavigationManager.NavigateTo("/products");
    }
}
