@page "/"
@page "/products"

@inject ISearchProductUseCase searchProduct
@inject IViewAuthorsUseCase ViewAuthorsUseCase
@inject IViewBrandsUseCase ViewBrandsUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase


<div class="container">
    <SearchBarComponent OnSearch="HandleSearch"></SearchBarComponent>
    <br />
    <Dropdown TItem="string" OnSelected="@HandleSearch">
        <InitialTip>Категории</InitialTip>
        <ChildContent>
            @foreach (var cat in categories)
            {
                <DropDownListItem Item="@cat.Name">@cat.Name</DropDownListItem>
            }
        </ChildContent>
    </Dropdown>
    <br />

    <br />
    @if (products != null && products.Count() > 0)
    {
        <div class="row">
            @foreach (var product in products)
            {
                <ProductCardComponent Product="product"></ProductCardComponent>
            }
        </div>
    }
    else
    {
        <text>Ничего нет.</text>
    }
</div>

@code {

    private List<Product> products;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        products = searchProduct.Execute().ToList();
        categories = ViewCategoriesUseCase.Execute();
    }

    private void HandleSearch(string filter)
    {
        products = searchProduct.Execute(filter: filter).ToList();
    }
}